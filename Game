import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.Timer;
import javax.swing.JPanel;
import java.util.Random;

public class Game extends JPanel implements KeyListener, ActionListener{
    public static int dX, dY, right;

    private boolean start = false;
    private int score =0;
    private Timer timer;
    private int delay = 5;
    private int game = 310; //starting position of slider

    private int ballposX = 120;
    private int ballposY = 350;
    private int ballXdir = -1;
    private int ballYdir = -2;


    public Game() {
        dX = 0;
        dY = 0;
        addKeyListener(this);
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        timer = new Timer(5, this);
        timer.start();
    }
    public void paint(Graphics g) {
        //background
        g.setColor(Color.black);
        g.fillRect(1, 1, 692, 592);

        //shrink bars
        g.setColor(Color.gray);
        g.fillRect(1, 1, dX, 591); //left
        g.fillRect(right, 1, dX, 591); //right
        g.fillRect(1, 1, 692, dY); //top

        //the paddle
        g.setColor(Color.magenta);
        g.fillRect(game, 550, 100, 8);

        //display score
        g.setColor(Color.WHITE);
        g.setFont(new Font("serif", Font.BOLD, 19));
        g.drawString("Score: " +score, 10, 30);

        //display creation name
        g.setColor(Color.white);
        g.setFont(new Font ("dialog", Font.ITALIC, 15));
        g.drawString("Created by Rebecca Lai as part of cuHacking 2020", 320, 30);

        //the ball
        g.setColor(Color.green);
        g.fillOval(ballposX, ballposY, 20, 20);

        if(ballposY > 570) {
            start = false;
            ballXdir = 0;
            ballYdir = 0;
            g.setColor(Color.WHITE);
            g.setFont(new Font("SansSerif", Font.BOLD, 30));
            g.drawString("GAME OVER, SCORE: " +score, 175, 300);
        }
        g.dispose();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Random randGen = new Random();
        timer.start();
        //ball moving
        if(start) { //if the game has started
            //if ball hits pannel
            if(new Rectangle(ballposX, ballposY, 20, 20).intersects(new Rectangle(game, 550, 100, 8))) {
                ballYdir = -ballYdir;
                score++;
                int x = randGen.nextInt (9) +1;
                int y = randGen.nextInt (9) +1;
                dX = dX + x;
                dY = dY + y;
                right = 692-dX;
            }
            //if the ball is touching the wall
            ballposX += ballXdir;
            ballposY += ballYdir;
            if(ballposX < dX) { //left border
                ballXdir = -ballXdir;
            }
            if(ballposY < dY) { //top
                ballYdir = -ballYdir;
            }
            if(ballposX > (670-dX)) { //right
                ballXdir = -ballXdir;
            }
        }
        repaint();
    }

    @Override
    public void keyTyped(KeyEvent keyEvent) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
            if(game >= (590-dX)) {
                game = (590-dX);
            } else {
                moveR();
            }
        }
        if(e.getKeyCode() == KeyEvent.VK_LEFT) {
            if(game < 10+dX) {
                game = 10+dX;
            } else {
                moveL();
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent keyEvent) {
    }

    public void moveR() {
        start = true;
        game+=10;
    }
    public void moveL() {
        start = true;
        game-=10;
    }
}
